   
-provide(:title, "Home")
.home-page
  .gallery
    %figure.gallery__item
      = image_tag "https://source.unsplash.com/o_AKuNfcFyM", alt: "logo", class: "gallery__photo"
    %figure.gallery__item
      = image_tag "https://source.unsplash.com/X6jtULYJQz8", alt: "logo", class: "gallery__photo"
    %figure.gallery__item
      = image_tag "https://source.unsplash.com/Vc8jfmzWoFE", alt: "logo", class: "gallery__photo"
    %figure.gallery__item
      = image_tag "https://source.unsplash.com/YUg5RwlnMKc", alt: "logo", class: "gallery__photo"

  .container.p-5
    %header
      %h1
        welcome in CRM Trener,
      %h2
        We use Rails
        = Rails.version
    - if current_user
      %section
        %p
          Soon home page
        = link_to "Edit user", edit_user_registration_path
        %hr
        = link_to "Log out", destroy_user_session_path
    - else
      = link_to 'User login', new_user_session_path
    %hr/
    - if current_customer
      %section
        %p 
          Soon customer home page
        = link_to "Edit customer", edit_customer_registration_path
        %hr/
        = link_to "Log out", destroy_customer_session_path
    - else
      %section 
        %p 
          Customer
        = link_to "Customer login", new_customer_session_path
        Or
        = link_to "Create account", new_customer_registration_path, class: 'btn btn-primary'
    -#   %section
    -#     %p
    -#       Soon customer home page
    -#     = link_to "Edit customer", edit_customer_registration_path
    -#     %hr
    -#     = link_to "Log out", destroy_customer_session_path,
    -# - else
    -#   %hr/
    -#   %section 
    -#     %p
    -#       Customer
    -#     = link_to "Customer login", new_customer_session_path
    %section
    -#   %h1 test autocomplete
    -#   = form_with url: autocomplete_path, local: true, method: :get do |form|
    -#     = form.text_field  :q, placeholder: 'Search', data: {behavior: "autocomplete"}, id: 'autoComplete', type: 'search', autocomplete: 'off'
    -#     -# %input#autoComplete{autocapitalize: "off", autocomplete: "off", autocorrect: "off", dir: "ltr", maxlength: "2048", spellcheck: "false", tabindex: "1", type: "search"}/
    -#     = form.button "saerch"
    -# <!-- = javascript_pack_tag 'javascript/search' -->
    -# %section
    -#   %h1 test easyAutocomplete
    -#   = form_with url: search_path, local: true, method: :get, html: { class: 'form-inline my-2 my-lg-0'} do |form|
    -#     = form.text_field  :q, placeholder: 'Search', data: {behavior: "autocomplete"}, id: 'easyAutocomplete', class: 'form-control mr-sm-2'
    -#     -# = form.button "search", class: 'btn btn-outline-success'
    -# <!-- = javascript_pack_tag 'javascript/search' -->
    -# %script
    -#   let input = $('#easyAutocomplete');
    -#   let options = { 
    -#   getValue: "name",
    -#   url: function(phrase){
    -#   return "/search?q=" + phrase;
    -#   },
    -#   categories: [
    -#   {
    -#   listLocation: 'customers',
    -#   header: "<strong>Customers</strong>"
    -#   },
    -#   {
    -#   listLocation: 'ingredients',
    -#   header: "<strong>Ingredients</strong>"
    -#   },
    -#   {
    -#   listLocation: 'recipes',
    -#   header: "<strong>Recipes</strong>"
    -#   }
    -#   ],
    -#   list:{onChooseEvent: function(){let url = input.getSelectedItemData().url;console.log(url);window.location.href = url;}}}
    -#   input.easyAutocomplete(options);