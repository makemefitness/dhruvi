= form_for @recipe, html: {class: 'form'} do |f|
  - if @recipe.errors.any?
    #error_explanation
      %h2= "#{pluralize(@recipe.errors.count, "error")} prohibited this recipe from being saved:"
      %ul
        - @recipe.errors.full_messages.each do |message|
          %li= message
  .form__group
    = f.text_field :name, class: "form__input", placeholder: "Name", autofocus: true
    = f.label :name, 'Name', class: "form__label"
  .form__group
    - if @recipe.photo.attached?
      = image_tag(@recipe.photo, class: 'form__group--image')
      = link_to 'Delete', "/recipes/#{@recipe.id}?purge=true", method: :delete
    = f.file_field :photo, value: 'Photo', placeholder: "Photo", style: "display:none;visibility:hidden;"
    = f.label :photo, 'Choose Photo', class: 'form__label form__label-file' do
      %svg.form__icon
        %use{"xlink:href" => "#{asset_path('sprite.svg')}#icon-camera"}
      Choose image
  .form__group
    = f.text_field :summary, class: "form__input", placeholder: "Summary"
    = f.label :summary, "Summary", class: "form__label"

  .form__group
    -# = f.text_area :preparation, class: "form__input", placeholder: "Preparation"
    -# = f.label :preparation, "Preparation", class: "form__label"
  .form__group
    = f.rich_text_area :description, class: "form__input", placeholder: "Preparation"
    = f.label :description, "Preparation", class: "form__label"
  .form__group
    = f.text_field :link, class: "form__input", placeholder: "Source link"
    = f.label :link, "Source link", class: "form__label"
  %h2 Ingredients
  .form__group.skladnik
    = f.fields_for :recipe_ingredients do |builder|
      = render 'recipe_ingredient_fields', f: builder
  .actions
    = link_to_add_association 'Add ingredient', f, :recipe_ingredients, data: {association_insertion_node: '.skladnik', association_insertion_method: :append }, class: 'my-btn my-btn--blue my-btn--width mb-3'
    = f.submit 'Save', :class => 'my-btn my-btn--pink my-btn--width btn-lg'
%script
  let input = $('#recipe_ingredients');
  let options = { 
  <!-- getValue: "name",  -->
  url: function(phrase){
  return "/search?q=" + phrase;
  },
  listLocation: 'ingredients',
  getValue: "name",
  list:{onChooseEvent: function(){let id = input.getSelectedItemData().id;console.log(id);}}
  }
  input.easyAutocomplete(options);